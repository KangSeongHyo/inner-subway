<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

	<select id="getBoardOne" parameterType="com.intern.board.BoardVO"
		resultType="com.intern.board.BoardVO">
		SELECT
				scode,entryNum,title,writer,registrationDate,viewCount,content,imgPath,recommend
		FROM
				station_board
		WHERE
				scode=#{scode}
		AND
				entryNum=#{entryNum}
	</select>

	<select id="getBoardList" parameterType="com.intern.station.StationVO"
		resultType="com.intern.board.BoardVO">

		SELECT
				b.scode,b.entryNum,b.title,b.writer,b.registrationDate,b.viewCount,b.content,b.imgPath,b.recommend,ifnull(r.recommendCheck,false)
				as recommendCheck
		FROM
				station_board b
		LEFT JOIN
				(select scode,entryNum,recommendCheck from station_recommend where id=#{id}) r
		ON
				b.scode = r.scode and b.entryNum=r.entryNum
		WHERE
				b.scode=#{scode}
		ORDER BY
				entryNum DESC
	</select>


	<select id="getEntryCount" parameterType="com.intern.station.StationVO"
		resultType="int">
		SELECT
				COUNT(*)
		FROM
				station_board
		WHERE
				scode=#{scode}
	</select>

	<insert id="insertBoard" parameterType="com.intern.board.BoardVO">
		INSERT INTO
				station_board
				(scode,title,writer,registrationDate,viewCount,content,imgPath,recommend)
		VALUES
				(#{scode},#{title},#{writer},sysdate(),0,#{content},#{imgPath},0)
	</insert>

	<delete id="deleteBoard" parameterType="com.intern.board.BoardVO">
		DELETE FROM
				station_board
		WHERE
				scode = #{scode}
		AND
				entrynum=#{entryNum}
	</delete>

	<update id="updateBoard" parameterType="com.intern.board.BoardVO">
		UPDATE
				station_board
		SET
				title=#{title},content=#{content}
				<if test="imgPath != 'NotFound'">
					,imgPath= #{imgPath}
				</if>
		WHERE
				scode = #{scode}
		AND
				entryNum = #{entryNum}
	</update>

	<update id="updateViewcount" parameterType="com.intern.board.BoardVO">
		UPDATE
				station_board
		SET
				viewCount=viewCount+1
		WHERE
				scode = #{scode}
		AND
				entryNum = #{entryNum}
	</update>

	<select id="getSearchBoard" parameterType="java.util.Map"
		resultType="com.intern.board.BoardVO">
		SELECT
				scode,entryNum,title,writer,registrationDate,viewCount,content,imgPath,recommend,recommendCheck
		FROM
			(SELECT
					b.scode,b.entryNum,b.title,b.writer,b.registrationDate,b.viewCount,b.content,b.imgPath,b.recommend,ifnull(r.recommendCheck,false)
					as recommendCheck
			FROM
					station_board b
			LEFT JOIN
					(select scode,entryNum,recommendCheck from station_recommend where id=#{id}) r
			ON
					b.scode = r.scode and b.entryNum=r.entryNum
			WHERE
					b.scode=#{scode}
		    ORDER BY
				entryNum DESC) BOARD
			WHERE
				title LIKE CONCAT('%',#{search},'%')
			OR
				writer LIKE CONCAT('%',#{search},'%')
	</select>

	<select id="getSearchBoardCount" parameterType="java.util.Map"
		resultType="Integer">
		SELECT
		COUNT(*)
		FROM
		(SELECT
		scode,entryNum,title,writer,registrationDate,viewCount,content,imgPath,recommend
		FROM
		station_board
		WHERE
		scode=#{scode}
		ORDER BY
		entryNum DESC) BOARD
		WHERE
		title LIKE CONCAT('%',#{search},'%')
		OR
		writer LIKE CONCAT('%',#{search},'%')
	</select>

	<select id="getSortBoardList" parameterType="com.intern.board.BoardVO"
		resultType="com.intern.board.BoardVO">

		SELECT
				b.scode,b.entryNum,b.title,b.writer,b.registrationDate,b.viewCount,b.content,b.imgPath,b.recommend,ifnull(r.recommendCheck,false)
				as recommendCheck
		FROM
				station_board b
		LEFT JOIN
				(select scode,entryNum,recommendCheck from station_recommend where id=#{id}) r
		ON
				b.scode = r.scode and b.entryNum=r.entryNum
		WHERE
				b.scode=#{scode}
		<if test="target != null and target !=''">
				ORDER BY	
					<choose>
						<when test="target eq 'recommend'"> recommend </when>
						<when test="target eq 'viewCount'"> viewCount </when>
					</choose>
					<choose>
						<when test="target != null and target !=''">DESC</when>
					</choose>
		</if>
	</select>


</mapper>
